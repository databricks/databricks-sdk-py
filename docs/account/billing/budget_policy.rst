``a.budget_policy``: Budget Policy
==================================
.. currentmodule:: databricks.sdk.service.billing

.. py:class:: BudgetPolicyAPI

    A service serves REST API about Budget policies

    .. py:method:: create( [, custom_tags: Optional[List[compute.CustomPolicyTag]], policy_name: Optional[str], request_id: Optional[str]]) -> BudgetPolicy

        Create a budget policy.

Creates a new policy.

:param custom_tags: List[:class:`CustomPolicyTag`] (optional)
  A list of tags defined by the customer. At most 40 entries are allowed per policy.
:param policy_name: str (optional)
  The name of the policy. - Must be unique among active policies. - Can contain only characters of
  0-9, a-z, A-Z, -, =, ., :, /, @, _, +, whitespace.
:param request_id: str (optional)
  A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID is
  recommended. This request is only idempotent if a `request_id` is provided.

:returns: :class:`BudgetPolicy`


    .. py:method:: delete(policy_id: str)

        Delete a budget policy.

Deletes a policy

:param policy_id: str
  The Id of the policy.




    .. py:method:: get(policy_id: str) -> BudgetPolicy

        Get a budget policy.

Retrieves a policy by it's ID.

:param policy_id: str
  The Id of the policy.

:returns: :class:`BudgetPolicy`


    .. py:method:: list( [, filter_by: Optional[Filter], page_size: Optional[int], page_token: Optional[str], sort_spec: Optional[SortSpec]]) -> Iterator[BudgetPolicy]

        List policies.

Lists all policies. Policies are returned in the alphabetically ascending order of their names.

:param filter_by: :class:`Filter` (optional)
  A filter to apply to the list of policies.
:param page_size: int (optional)
  The maximum number of budget policies to return. If unspecified, at most 100 budget policies will be
  returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
:param page_token: str (optional)
  A page token, received from a previous `ListServerlessPolicies` call. Provide this to retrieve the
  subsequent page. If unspecified, the first page will be returned.
  
  When paginating, all other parameters provided to `ListServerlessPoliciesRequest` must match the
  call that provided the page token.
:param sort_spec: :class:`SortSpec` (optional)
  The sort specification.

:returns: Iterator over :class:`BudgetPolicy`


    .. py:method:: update(policy_id: str [, limit_config: Optional[LimitConfig], policy: Optional[BudgetPolicy]]) -> BudgetPolicy

        Update a budget policy.

Updates a policy

:param policy_id: str
  The Id of the policy. This field is generated by Databricks and globally unique.
:param limit_config: :class:`LimitConfig` (optional)
  DEPRECATED. This is redundant field as LimitConfig is part of the BudgetPolicy
:param policy: :class:`BudgetPolicy` (optional)
  Contains the BudgetPolicy details.

:returns: :class:`BudgetPolicy`
